{
  
    
        "post0": {
            "title": "COVID-19 en Chile",
            "content": "Última actualización: 24/04/2020. . Estad&#237;sticas para Chile . Casos confirmados: 12.306 (+3.054 en una semana) . Fallecimientos confirmados: 174 (+58 en una semana) . Estadísticas por región: Casos confirmados (CC) y fallecidos confirmados (FC) Region CC CC por 100.000 hab. FC FC por 100.000 hab. . Arica y Parinacota | 239 | 52.9 | 3 | 1.2 | . Tarapacá | 134 | 116.7 | 0 | 0 | . Antofagasta | 366 | 94.8 | 2 | 0.3 | . Atacama | 21 | 6.7 | 0 | 0 | . Coquimbo | 72 | 6.5 | 0 | 0 | . Valparaíso | 436 | 41.1 | 8 | 0.4 | . Metropolitana | 6761 | 8.6 | 86 | 1.1 | . O’Higgins | 81 | 51.6 | 1 | 0.1 | . Maule | 349 | 42.9 | 10 | 0.9 | . Ñuble | 715 | 349.9 | 14 | 2.7 | . Biobío | 683 | 30.8 | 5 | 0.3 | . Araucanía | 1184 | 83.2 | 26 | 2.6 | . Los Ríos | 174 | 8.2 | 3 | 0.7 | . Los Lagos | 460 | 35 | 8 | 0.9 | . Aysén | 7 | 22.2 | 0 | 0 | . Magallanes | 624 | 139.8 | 8 | 4.5 | . Estadísticas por región: Exámenes informados desde el 9 de abril Región Exámenes informados Exámenes informados por 100.000 habs. . Arica y Parinacota | 1143 | 453.4 | . Tarapacá | 413 | 107.9 | . Antofagasta | 2306 | 333.3 | . Atacama | 658 | 209.1 | . Coquimbo | 99 | 11.8 | . Valparaíso | 3844 | 196.1 | . Metropolitana | 52372 | 644.6 | . O’Higgins | 685 | 69.1 | . Maule | 4758 | 420.3 | . Ñuble | 1997 | 390.4 | . Biobío | 5203 | 312.7 | . Araucanía | 3380 | 333.2 | . Los Ríos | 837 | 206.2 | . Los Lagos | 3164 | 354.9 | . Aysén | 163 | 151.9 | . Magallanes | 870 | 487.8 | . Nota: Los exámenes informados por región empezaron a informarse sólo desde el 9 de abril. . Evoluci&#243;n de casos confirmados por regi&#243;n . data_raw . 2020-03-03 2020-03-04 2020-03-05 2020-03-06 2020-03-07 2020-03-08 2020-03-09 2020-03-10 2020-03-11 2020-03-12 ... 2020-04-15 2020-04-16 2020-04-17 2020-04-18 2020-04-19 2020-04-20 2020-04-21 2020-04-22 2020-04-23 2020-04-24 . Region . Arica y Parinacota 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 124 | 129 | 134 | 142 | 145 | 161 | 170 | 180 | 210 | 239 | . Tarapacá 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 62 | 66 | 73 | 81 | 90 | 93 | 104 | 114 | 128 | 134 | . Antofagasta 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 176 | 192 | 211 | 226 | 249 | 263 | 291 | 326 | 340 | 366 | . Atacama 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 18 | 21 | . Coquimbo 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 66 | 68 | 68 | 68 | 68 | 69 | 69 | 70 | 70 | 72 | . Valparaíso 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 299 | 330 | 345 | 359 | 381 | 388 | 403 | 421 | 429 | 436 | . Metropolitana 0 | 1 | 2 | 3 | 4 | 6 | 9 | 10 | 14 | 23 | ... | 4334 | 4682 | 4915 | 5192 | 5381 | 5643 | 5788 | 6083 | 6434 | 6761 | . O’Higgins 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 54 | 54 | 55 | 55 | 55 | 56 | 57 | 59 | 76 | 81 | . Maule 1 | 2 | 2 | 2 | 2 | 3 | 4 | 5 | 7 | 7 | ... | 152 | 167 | 223 | 276 | 302 | 304 | 316 | 328 | 333 | 349 | . Ñuble 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | ... | 634 | 639 | 656 | 667 | 678 | 687 | 694 | 703 | 708 | 715 | . Biobío 0 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | ... | 542 | 559 | 578 | 606 | 616 | 626 | 636 | 658 | 675 | 683 | . Araucanía 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 826 | 882 | 907 | 944 | 972 | 1045 | 1092 | 1113 | 1142 | 1184 | . Los Ríos 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 150 | 153 | 154 | 156 | 157 | 162 | 167 | 171 | 173 | 174 | . Los Lagos 0 | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 | 1 | ... | 390 | 399 | 412 | 416 | 421 | 424 | 432 | 445 | 454 | 460 | . Aysén 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 7 | 7 | 7 | 7 | 7 | 7 | 7 | 7 | 7 | 7 | . Magallanes 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | ... | 444 | 467 | 501 | 522 | 553 | 566 | 593 | 605 | 615 | 624 | . 16 rows × 53 columns . Fuente: Ministerio de Ciencia . Inspirado del tweet de @NachoToledoR. . Evoluci&#243;n de fallecidos confirmados por regi&#243;n . Fuente: Ministerio de Ciencia . Evoluci&#243;n de pacientes en UCI por regi&#243;n . Fuente: Ministerio de Ciencia . Casos confirmados por regi&#243;n . Fuente: Ministerio de Ciencia . Casos confirmados por regi&#243;n por cada 100.000 habitantes . Fuente: Ministerio de Ciencia . Fallecidos confirmados por regi&#243;n . Fuente: Ministerio de Ciencia . Fallecidos confirmados por regi&#243;n por cada 100.000 habitantes . Fuente: Ministerio de Ciencia . Tasa de letalidad por regi&#243;n . Tasa de letalidad = fallecidos confirmados / casos confirmados (en porcentaje) . Fuente: Ministerio de Ciencia . Ex&#225;menes informados por regi&#243;n desde el 9 de abril . Nota: sólo se dispone de los datos de exámenes informados por región desde el 9 de abril . Fuente: Ministerio de Ciencia . Ex&#225;menes informados por regi&#243;n por cada 100.000 habitantes desde el 9 de abril . Nota: sólo se dispone de los datos de exámenes informados por región desde el 9 de abril . Fuente: Ministerio de Ciencia . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por regi&#243;n desde el 9 de abril . Nota: sólo se dispone de los datos de exámenes informados por región desde el 9 de abril . Exámenes, casos confirmados, y fallecimientos confirmados por región desde el 9 de abril. . Fuente: Ministerio de Ciencia . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por regi&#243;n por cada 100.000 habitantes desde el 9 de abril . Nota: sólo se dispone de los datos de exámenes informados por región desde el 9 de abril . Exámenes, casos confirmados, y fallecimientos confirmados por región por cada 100.000 habitantes desde el 9 de abril . Fuente: Ministerio de Ciencia . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de la OCDE por cada 1 mill&#243;n de habitantes . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Fuentes: ECDC, Our World in Data . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de la OCDE por cada 1 mill&#243;n de habitantes en los &#250;ltimos 3 d&#237;as . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de latinoam&#233;rica por cada 1 mill&#243;n de habitantes . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Nota: Muchos países de latinoamérica no tienen datos disponibles. . Fuentes: ECDC, Our World in Data . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de latinoam&#233;rica por cada 1 mill&#243;n de habitantes en los &#250;ltimos 3 d&#237;as . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Nota: Muchos países de latinoamérica no tienen datos disponibles. .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/04/20/test.html",
            "relUrl": "/jupyter/2020/04/20/test.html",
            "date": " • Apr 20, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Me llamo Alonso Silva y soy investigador en aprendizaje de máquinas en Safran, una empresa internacional de alta tecnología que opera en los dominios de la propulsión y de equipos aeronáuticos, del espacio y de la defensa. Estoy a cargo de proponer y evaluar estrategias de mantenimiento predictivas en dos niveles distintos: primero, predecir el tiempo estimado de supervivencia de las componentes utilizadas en nuestros equipos, junto con los intervalos de confianza de las predicciones; y segundo, proponer y evaluar estrategias de mantenimiento a través de algoritmos de optimización con dependencias intertemporales. . Página personal: http://www.dim.uchile.cl/~alsilva/ . Twitter: @alonsosilva .",
          "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}