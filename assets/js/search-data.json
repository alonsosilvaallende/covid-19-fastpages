{
  
    
        "post0": {
            "title": "Fallecimientos en Chile",
            "content": "Fallecimientos semanales . Fallecimientos semanales por mill&#243;n de habitantes . Fuentes: . DEIS (Fallecimientos 2010-2017) | Registro Civil (Fallecimientos 2018-2020) | Datos Macro (Población 2010-2018) | INE (Población 2019-2020) | .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/05/16/Fallecimientos.html",
            "relUrl": "/jupyter/2020/05/16/Fallecimientos.html",
            "date": " • May 16, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "DRAFT: COVID-19 en Chile: Estadísticas demográficas",
            "content": "Casos confirmados por grupo de edad . Fallecidos confirmados por grupo de edad . Letalidad por grupo de edad . Poblaci&#243;n por grupo de edad . Pacientes UCI por rango de edad . Evoluci&#243;n de casos confirmados por rango de edad . hide_input . selection2 = alt.selection_multi(fields=[&#39;Grupo de edad&#39;], on=&#39;mouseover&#39;) . color = alt.condition(selection2, alt.Color(&#39;Grupo de edad:N&#39;, scale=alt.Scale(scheme=&#39;tableau20&#39;), legend=None), alt.value(&#39;lightgray&#39;)) . bars = alt.Chart(cases).mark_area().encode( x = &#39;fecha (año-mes-día):N&#39;, y = alt.Y(&#39;casos confirmados:Q&#39;, stack=&quot;normalize&quot;), color = color, tooltip = [&#39;fecha (año-mes-día)&#39;, &#39;Grupo de edad&#39;, &#39;casos confirmados&#39;], order=alt.Order( . # Sort the segments of the bars by this field &#39;index&#39;, sort=&#39;descending&#39; ) . ).add_selection( selection2 ) . legend = alt.Chart(cases).mark_point().encode( y=alt.Y(&#39;Grupo de edad&#39;, axis=alt.Axis(orient=&#39;right&#39;), sort=grupo_de_edad), color=color ).add_selection( selection2 ) . bars.properties( title = &#39;COVID-19 en Chile: Evolución de casos confirmados por rango de edad&#39;, width = 600 ) | legend . Evoluci&#243;n de fallecidos confirmados por rango de edad .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/05/03/Demographic-Statistics.html",
            "relUrl": "/jupyter/2020/05/03/Demographic-Statistics.html",
            "date": " • May 3, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Covid-19 status in Chile",
            "content": "Updated on May 11, 2020. . Confirmed cases: 30,063 (+9,420 since 7 days ago) . Confirmed deaths: 323 (+53 since 7 days ago) . Statistics by region: Confirmed cases and confirmed deaths Region Confirmed cases Confirmed cases per 100,000 people Confirmed deaths Confirmed deaths per 100.000 people . Arica y Parinacota | 351 | 146.600000 | 7 | 2.800000 | . Tarapacá | 547 | 144.500000 | 1 | 0.300000 | . Antofagasta | 1014 | 139.200000 | 10 | 1.400000 | . Atacama | 133 | 42.300000 | 0 | 0.000000 | . Coquimbo | 140 | 7.500000 | 1 | 0.100000 | . Valparaíso | 970 | 56.000000 | 21 | 1.100000 | . Metropolitana | 21317 | 16.700000 | 172 | 2.100000 | . O’Higgins | 216 | 66.400000 | 4 | 0.400000 | . Maule | 454 | 51.300000 | 14 | 1.200000 | . Ñuble | 814 | 505.200000 | 18 | 3.500000 | . Biobío | 932 | 40.100000 | 8 | 0.500000 | . Araucanía | 1466 | 262.400000 | 38 | 3.700000 | . Los Ríos | 208 | 21.800000 | 5 | 1.200000 | . Los Lagos | 592 | 142.900000 | 10 | 1.100000 | . Aysén | 8 | 49.500000 | 0 | 0.000000 | . Magallanes | 901 | 159.100000 | 14 | 7.800000 | . Evolution of total confirmed cases by region . Evolution of total confirmed deaths by region . Data source: Science Ministry. . Daily confirmed cases . Chile . Arica y Parinacota . Tarapac&#225; . Antofagasta . Atacama . Coquimbo . Valpara&#237;so . Metropolitana . O&#39;Higgins . Maule . &#209;uble . Biob&#237;o . Araucan&#237;a . Los R&#237;os . Los Lagos . Ays&#233;n . Magallanes . Daily confirmed deaths . Chile . Arica y Parinacota . Tarapac&#225; . Antofagasta . Atacama . There are no confirmed deaths up to May 11, 2020. . Coquimbo . Valpara&#237;so . Metropolitana . O&#8217;Higgins . Maule . &#209;uble . Biob&#237;o . Araucan&#237;a . Los R&#237;os . Los Lagos . Ays&#233;n . There are no confirmed deaths up to May 11, 2020. . Magallanes .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/04/27/Covid-19-Overview-Chile.html",
            "relUrl": "/jupyter/2020/04/27/Covid-19-Overview-Chile.html",
            "date": " • Apr 27, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "COVID-19 en Chile: Casos y fallecimientos confirmados diarios",
            "content": "alt.Chart(new_cases).mark_bar(opacity=0.7).encode( x = alt.X(&#39;Fecha:N&#39;, axis=alt.Axis(title=&#39;Fecha (año-mes-día)&#39;)), y = alt.Y(&#39;Casos confirmados:Q&#39;, axis=alt.Axis(title=&#39;Casos confirmados diarios&#39;)), tooltip = [&#39;Fecha&#39;, &#39;Casos confirmados&#39;], opacity=alt.Opacity(&#39;Casos confirmados diarios&#39;, legend=alt.Legend(title=&quot;&quot;)) ) . Datos provenientes del Ministerio de Ciencia. . Casos confirmados diarios . Chile . Arica y Parinacota . Tarapac&#225; . Antofagasta . Atacama . Coquimbo . Valpara&#237;so . Metropolitana . O&#39;Higgins . Maule . &#209;uble . Biob&#237;o . Araucan&#237;a . Los R&#237;os . Los Lagos . Ays&#233;n . Magallanes . Fallecimientos confirmados diarios . Chile . Arica y Parinacota . Tarapac&#225; . Antofagasta . Atacama . No hay fallecimientos confirmados hasta el 13/05/2020. . Coquimbo . Valpara&#237;so . Metropolitana . O&#8217;Higgins . Maule . &#209;uble . Biob&#237;o . Araucan&#237;a . Los R&#237;os . Los Lagos . Ays&#233;n . No hay fallecimientos confirmados hasta el 13/05/2020. . Magallanes .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/04/27/Casos-confirmados-y-fallecimientos-confirmados-diarios-por-region.html",
            "relUrl": "/jupyter/2020/04/27/Casos-confirmados-y-fallecimientos-confirmados-diarios-por-region.html",
            "date": " • Apr 27, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "COVID-19 is not the flu",
            "content": "C19 is not the flu pic.twitter.com/6O8tTpZ2vP . &mdash; Jo (@jperla) April 7, 2020 . I love how powerful this visualization is (and hate the danger it shows). . OK, actually I think I need to give you some context. At the beginning of the Covid-19 spread, there were many voices claiming that Covid-19 was not worst than the flu. Just to give you some examples: . The Washington Post: The flu is a much bigger threat than coronavirus, for now, on February 1. | Wired: We Should Deescalate the War on the Coronavirus, on January 29. | National Post: New Coronavirus may be no more dangerous than the flu despite worldwide alarm, on February 4. | . Even the president of the United States on March 9 wrote the following: . So last year 37,000 Americans died from the common Flu. It averages between 27,000 and 70,000 per year. Nothing is shut down, life &amp; the economy go on. At this moment there are 546 confirmed cases of CoronaVirus, with 22 deaths. Think about that! . &mdash; Donald J. Trump (@realDonaldTrump) March 9, 2020 . I think part of the problem was that people were looking at the numbers of confirmed cases and deaths and the numbers were not that impressive. But as some smart people pointed out: . The media is missing the plot. What matters is not the number of cases and the number of deaths. What matters is their growth rate. ➡️ https://t.co/mIruoT1J59 https://t.co/OgaRW4gbtU . &mdash; Max Roser (@MaxCRoser) March 10, 2020 . On March 28, there were already many confirmed cases and deaths of Covid-19 in Italy. On that day I sent a message to my friend Patricio Reyes telling him that I wanted to do a visualization comparing deaths by the flu and Covid-19 in Italy. I actually found an article stating &quot;We estimated excess deaths of 7,027, 20,259, 15,801 and 24,981 attributable to influenza epidemics in the 2013/14, 2014/15, 2015/16 and 2016/17, respectively, using the Goldstein index&quot; 1. . So I looked at the data in Italy and this is how it looked like: . So in around one month there were more than 9,000 deaths and the daily deaths were more than 900. I guess I could have made a point by comparing it to the average number of deaths in a month in the worst year (2016/2017 with 24,981 deaths, or around 2100 deaths per month or 68 per day), but the flu is highly seasonal so I don&#39;t think it would be convincing. . And then on April 7, I found the mentioned tweet: . C19 is not the flu pic.twitter.com/6O8tTpZ2vP . &mdash; Jo (@jperla) April 7, 2020 . The original source of the visualization was a reddit post by Dr. David. The statistics on &quot;flu-associated deaths&quot; include both confirmed flu cases and other pneumonia deaths attributable to viral infections that are probably, but not necessarily, the flu. . I think the visualization illustrated well what was important which was the growing rate. I had some people telling me that it didn&#39;t prove anything since the quantity of weekly deaths was smaller than the worst weeks of some years of the &quot;flu-associated deaths&quot;, but again what they were missing was the growing rate. . So here I recreated the plot: . And here is what happened in the next two weeks: . Indeed, the visualized growing rate was a good sign of what was going to happen. . Special thanks to Patricio Reyes and Antonia Maria Masucci who reviewed this post. . 1. Investigating the impact of influenza on excess mortality in all ages in Italy during recent seasons (2013/14–2016/17 seasons).↩ .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/04/26/Covid-19-is-not-the-flu.html",
            "relUrl": "/jupyter/2020/04/26/Covid-19-is-not-the-flu.html",
            "date": " • Apr 26, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "COVID-19 en Chile",
            "content": "Última actualización: 20/05/2020. . Estad&#237;sticas para Chile . Casos confirmados: 53.617 (+19.236 en una semana) . Fallecimientos confirmados: 544 (+198 en una semana) . Estadísticas por región: Casos confirmados (CC) y fallecidos confirmados (FC) Region CC CC por 100.000 hab. FC FC por 100.000 hab. . Arica y Parinacota | 424 | 250.2 | 7 | 2.8 | . Tarapacá | 1139 | 165.6 | 4 | 1.0 | . Antofagasta | 1731 | 168.2 | 17 | 2.5 | . Atacama | 163 | 51.8 | 0 | 0.0 | . Coquimbo | 263 | 7.5 | 2 | 0.2 | . Valparaíso | 1770 | 73.6 | 35 | 1.8 | . Metropolitana | 41179 | 31.5 | 348 | 4.3 | . O’Higgins | 455 | 74.7 | 7 | 0.7 | . Maule | 680 | 60.9 | 14 | 1.2 | . Ñuble | 1011 | 547.8 | 21 | 4.1 | . Biobío | 1224 | 60.1 | 9 | 0.5 | . Araucanía | 1680 | 506.8 | 44 | 4.3 | . Los Ríos | 247 | 45.9 | 6 | 1.5 | . Los Lagos | 666 | 297.6 | 12 | 1.3 | . Aysén | 8 | 90.3 | 0 | 0.0 | . Magallanes | 977 | 197.6 | 18 | 10.1 | . Estadísticas por región: Exámenes informados desde el 9 de abril Región Exámenes informados Exámenes informados por 100.000 habs. . Arica y Parinacota | 3592 | 1424.8 | . Tarapacá | 4381 | 1144.5 | . Antofagasta | 8771 | 1267.8 | . Atacama | 3355 | 1066.1 | . Coquimbo | 3095 | 370.2 | . Valparaíso | 14678 | 748.8 | . Metropolitana | 228341 | 2810.3 | . O’Higgins | 4139 | 417.6 | . Maule | 12360 | 1091.9 | . Ñuble | 6641 | 1298.2 | . Biobío | 21350 | 1283.3 | . Araucanía | 12384 | 1220.9 | . Los Ríos | 3548 | 874.2 | . Los Lagos | 17961 | 2014.8 | . Aysén | 1080 | 1006.6 | . Magallanes | 3573 | 2003.2 | . Nota: Los exámenes informados por región empezaron a informarse sólo desde el 9 de abril. . Fuente: Ministerio de Ciencia . Evoluci&#243;n de casos confirmados diarios . Fuente: Ministerio de Ciencia . Evoluci&#243;n de casos confirmados diarios por regi&#243;n . Fuente: Ministerio de Ciencia . Evoluci&#243;n de fallecimientos confirmados diarios . Fuente: Ministerio de Ciencia . Evoluci&#243;n de fallecimientos confirmados diarios por regi&#243;n . Fuente: Ministerio de Ciencia . Evoluci&#243;n de casos confirmados por regi&#243;n . Fuente: Ministerio de Ciencia . Inspirado del tweet de @NachoToledoR. . Evoluci&#243;n de fallecidos confirmados por regi&#243;n . Fuente: Ministerio de Ciencia . Evoluci&#243;n de pacientes en UCI por regi&#243;n . Fuente: Ministerio de Ciencia . Casos confirmados por cada 100.000 habitantes por regi&#243;n . Fuente: Ministerio de Ciencia . Fallecidos confirmados por cada 100.000 habitantes por regi&#243;n . Fuente: Ministerio de Ciencia . Tasa de letalidad por regi&#243;n . Tasa de letalidad = fallecidos confirmados / casos confirmados . Fuente: Ministerio de Ciencia . Ex&#225;menes informados por regi&#243;n por cada 100.000 habitantes desde el 9 de abril . Nota: sólo se dispone de los datos de exámenes informados por región desde el 9 de abril . Fuente: Ministerio de Ciencia . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por regi&#243;n por cada 100.000 habitantes desde el 9 de abril . Nota: sólo se dispone de los datos de exámenes informados por región desde el 9 de abril . Fuente: Ministerio de Ciencia . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de la OCDE por cada 1 mill&#243;n de habitantes . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Fuentes: ECDC, Our World in Data . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de la OCDE por cada 1 mill&#243;n de habitantes en los &#250;ltimos 3 d&#237;as . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . ValueError Traceback (most recent call last) ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 323 result = _todict(self._args[0], validate=sub_validate, context=context) 324 elif not self._args: --&gt; 325 result = _todict( 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): &gt; 60 return { 61 k: _todict(v, validate, context) 62 for k, v in obj.items() ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 59 elif isinstance(obj, dict): 60 return { &gt; 61 k: _todict(v, validate, context) 62 for k, v in obj.items() 63 if v is not Undefined ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 323 result = _todict(self._args[0], validate=sub_validate, context=context) 324 elif not self._args: --&gt; 325 result = _todict( 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): &gt; 60 return { 61 k: _todict(v, validate, context) 62 for k, v in obj.items() ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 59 elif isinstance(obj, dict): 60 return { &gt; 61 k: _todict(v, validate, context) 62 for k, v in obj.items() 63 if v is not Undefined ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 323 result = _todict(self._args[0], validate=sub_validate, context=context) 324 elif not self._args: --&gt; 325 result = _todict( 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): &gt; 60 return { 61 k: _todict(v, validate, context) 62 for k, v in obj.items() ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 59 elif isinstance(obj, dict): 60 return { &gt; 61 k: _todict(v, validate, context) 62 for k, v in obj.items() 63 if v is not Undefined ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/vegalite/v4/schema/channels.py in to_dict(self, validate, ignore, context) 38 elif not (type_in_shorthand or type_defined_explicitly): 39 if isinstance(context.get(&#39;data&#39;, None), pd.DataFrame): &gt; 40 raise ValueError(&#34;{} encoding field is specified without a type; &#34; 41 &#34;the type cannot be inferred because it does not &#34; 42 &#34;match any column in the data.&#34;.format(shorthand)) ValueError: Tests encoding field is specified without a type; the type cannot be inferred because it does not match any column in the data. . alt.LayerChart(...) . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de latinoam&#233;rica por cada 1 mill&#243;n de habitantes . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Nota: Muchos países de latinoamérica no tienen datos disponibles. . Fuentes: ECDC, Our World in Data . Ex&#225;menes, casos confirmados, y fallecimientos confirmados por pa&#237;s de latinoam&#233;rica por cada 1 mill&#243;n de habitantes en los &#250;ltimos 3 d&#237;as . Exámenes, casos confirmados, y fallecimientos confirmados por país por cada 1 millón de habitantes . Nota: Muchos países de latinoamérica no tienen datos disponibles. . ValueError Traceback (most recent call last) ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 323 result = _todict(self._args[0], validate=sub_validate, context=context) 324 elif not self._args: --&gt; 325 result = _todict( 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): &gt; 60 return { 61 k: _todict(v, validate, context) 62 for k, v in obj.items() ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 59 elif isinstance(obj, dict): 60 return { &gt; 61 k: _todict(v, validate, context) 62 for k, v in obj.items() 63 if v is not Undefined ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 323 result = _todict(self._args[0], validate=sub_validate, context=context) 324 elif not self._args: --&gt; 325 result = _todict( 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): &gt; 60 return { 61 k: _todict(v, validate, context) 62 for k, v in obj.items() ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 59 elif isinstance(obj, dict): 60 return { &gt; 61 k: _todict(v, validate, context) 62 for k, v in obj.items() 63 if v is not Undefined ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 323 result = _todict(self._args[0], validate=sub_validate, context=context) 324 elif not self._args: --&gt; 325 result = _todict( 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): &gt; 60 return { 61 k: _todict(v, validate, context) 62 for k, v in obj.items() ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 59 elif isinstance(obj, dict): 60 return { &gt; 61 k: _todict(v, validate, context) 62 for k, v in obj.items() 63 if v is not Undefined ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] ~/opt/anaconda3/envs/fastpages/lib/python3.8/site-packages/altair/vegalite/v4/schema/channels.py in to_dict(self, validate, ignore, context) 38 elif not (type_in_shorthand or type_defined_explicitly): 39 if isinstance(context.get(&#39;data&#39;, None), pd.DataFrame): &gt; 40 raise ValueError(&#34;{} encoding field is specified without a type; &#34; 41 &#34;the type cannot be inferred because it does not &#34; 42 &#34;match any column in the data.&#34;.format(shorthand)) ValueError: Tests encoding field is specified without a type; the type cannot be inferred because it does not match any column in the data. . alt.LayerChart(...) .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/04/20/test.html",
            "relUrl": "/jupyter/2020/04/20/test.html",
            "date": " • Apr 20, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Me llamo Alonso Silva y soy investigador en aprendizaje de máquinas en Safran, una empresa internacional de alta tecnología que opera en los dominios de la propulsión y de equipos aeronáuticos, del espacio y de la defensa. Estoy a cargo de proponer y evaluar estrategias de mantenimiento predictivas en dos niveles distintos: primero, predecir el tiempo estimado de supervivencia de las componentes utilizadas en nuestros equipos, junto con los intervalos de confianza de las predicciones; y segundo, proponer y evaluar estrategias de mantenimiento a través de algoritmos de optimización con dependencias intertemporales. . Página personal: http://www.dim.uchile.cl/~alsilva/ . Twitter: @alonsosilva .",
          "url": "https://alonsosilvaallende.github.io/covid-19-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}